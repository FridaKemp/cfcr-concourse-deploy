name: ((cfcr-deployment-name))

addons:
- include:
    stemcell:
    - os: ubuntu-trusty
    - os: ubuntu-xenial

  jobs:
  - name: bosh-dns
    properties:
      api:
        client:
          tls: 
            ca: ((dns_api_client_tls))
            certificate: ((dns_api_client_tls_certificate))
            private_key: ((dns_api_client_tls_private_key))
        server:
          tls:
            ca: ((dns_api_server_tls))
            certificate: ((dns_api_server_tls_certificate))
            private_key: ((dns_api_server_tls_private_key))
      cache:
        enabled: true
      health:
        client:
          tls: 
            ca: ((dns_healthcheck_client_tls))
            certificate: ((dns_healthcheck_client_tls_certificate))
            private_key: ((dns_healthcheck_client_tls_private_key))
        enabled: true
        server:
          tls:
            ca: ((dns_healthcheck_server_tls))
            certificate: ((dns_healthcheck_server_tls_certificate))
            private_key: ((dns_healthcheck_server_tls_private_key))
    release: bosh-dns
  name: bosh-dns
- jobs:
  - name: kubo-dns-aliases
    release: kubo
  name: bosh-dns-aliases
features:
  use_dns_addresses: true
instance_groups:
- azs:
  - z1
  instances: 1
  jobs:
  - name: apply-specs
    properties:
      addons:
      - kube-dns
      - metrics-server
      - heapster
      - kubernetes-dashboard
      admin-password: ((kubo-admin-password))
      admin-username: admin
      api-token: ((kubelet-password))
      tls:
        heapster: 
          ca: ((tls-heapster))
          certificate: ((tls-heapster-certificate))
          private_key: ((tls-heapster-private_key))
        influxdb: 
          ca: ((tls-influxdb))
          certificate: ((tls-influxdb-certificate))
          private_key: ((tls-influxdb-private_key))
        kubernetes: 
          ca: ((tls-kubernetes))
          certificate: ((tls-kubernetes-certificate))
          private_key: ((tls-kubernetes-private_key))
        kubernetes-dashboard:
          ca: ((tls-kubernetes-dashboard))
          certificate: ((tls-kubernetes-dashboard-certificate))
          private_key: ((tls-kubernetes-dashboard-private_key))
        metrics-server: ((tls-metrics-server))
    release: kubo
  lifecycle: errand
  name: apply-addons
  networks:
  - name: default
  stemcell: default
  vm_type: minimal
- azs:
  - z1
  - z2
  - z3
  instances: 3
  jobs:
  - name: bpm
    release: bpm
  - name: flanneld
    release: kubo
  - name: kube-apiserver
    properties:
      admin-password: ((kubo-admin-password))
      admin-username: admin
      backend_port: 8443
      kube-controller-manager-password: ((kube-controller-manager-password))
      kube-proxy-password: ((kube-proxy-password))
      kube-scheduler-password: ((kube-scheduler-password))
      kubelet-drain-password: ((kubelet-drain-password))
      kubelet-password: ((kubelet-password))
      port: 8443
      service-account-public-key: ((service-account-key-public_key))
      tls:
        kubelet-client: ((tls-kubelet-client))
        kubernetes:
          ca: ((tls-kubernetes))
          certificate: ((tls-kubernetes-certificate))
          private_key: ((tls-kubernetes-private_key))
    release: kubo
  - name: kube-controller-manager
    properties:
      api-token: ((kube-controller-manager-password))
      cluster-signing:
        ca: ((kubo_ca))
        certificate: ((kubo_ca_certificate))
        private_key: ((kubo_ca_private_key))
      service-account-private-key: ((service-account-key-private_key))
      tls:
        kubernetes:
          ca: ((tls-kubernetes))
          certificate: ((tls-kubernetes-certificate))
          private_key: ((tls-kubernetes-private_key))
    release: kubo
  - name: kube-scheduler
    properties:
      api-token: ((kube-scheduler-password))
      tls:
        kubernetes:
          ca: ((tls-kubernetes))
          certificate: ((tls-kubernetes-certificate))
          private_key: ((tls-kubernetes-private_key))
    release: kubo
  - name: kubernetes-roles
    properties:
      admin-password: ((kubo-admin-password))
      admin-username: admin
      tls:
        kubernetes:
          ca: ((tls-kubernetes))
          certificate: ((tls-kubernetes-certificate))
          private_key: ((tls-kubernetes-private_key))
    release: kubo
  - name: etcd
    properties:
      etcd:
        dns_suffix: etcd.cfcr.internal
      tls:
        etcd:
          ca: ((tls-etcd-v0-17-0-ca))
          certificate: ((tls-etcd-v0-17-0-certificate))
          private_key: ((tls-etcd-v0-17-0-private_key))
        etcdctl:
          ca: ((tls-etcdctl-ca))
          certificate: ((tls-etcdctl-certificate))
          private_key: ((tls-etcdctl-private_key))
        peer:
          ca: ((tls-etcd-v0-17-0-ca))
          certificate: ((tls-etcd-v0-17-0-certificate))
          private_key: ((tls-etcd-v0-17-0-private_key))
    release: cfcr-etcd
  - name: smoke-tests
    release: kubo
  name: master
  networks:
  - name: default
  persistent_disk: 5120
  stemcell: default
  vm_type: small
- azs:
  - z1
  - z2
  - z3
  instances: 1
  jobs:
  - name: flanneld
    release: kubo
  - name: docker
    properties:
      bridge: cni0
      default_ulimits:
      - nofile=65536
      env: {}
      flannel: true
      ip_masq: false
      iptables: false
      log_level: error
      log_options:
      - max-size=128m
      - max-file=2
      storage_driver: overlay2
      store_dir: /var/vcap/data
    release: docker
  - name: kubernetes-dependencies
    release: kubo
  - name: kubelet
    properties:
      api-token: ((kubelet-password))
      drain-api-token: ((kubelet-drain-password))
      tls:
        kubelet:
          ca: ((tls-kubelet))
          certificate: ((tls-kubelet-certificate))
          private_key: ((tls-kubelet-private_key))
        kubelet-client-ca:
          certificate: ((tls-kubelet-client))
        kubernetes:
          ca: ((tls-kubernetes))
          certificate: ((tls-kubernetes-certificate))
          private_key: ((tls-kubernetes-private_key))
    release: kubo
  - name: kube-proxy
    properties:
      api-token: ((kube-proxy-password))
      tls:
        kubernetes:
          ca: ((tls-kubernetes))
          certificate: ((tls-kubernetes-certificate))
          private_key: ((tls-kubernetes-private_key))
    release: kubo
  name: worker
  networks:
  - name: default
  stemcell: default
  vm_type: small-highmem
name: cfcr
releases:
- name: kubo
  sha1: f9ae87d2def4bf70c2c684711391b405021726c1
  url: https://github.com/cloudfoundry-incubator/kubo-release/releases/download/v0.23.0/kubo-release-0.23.0.tgz
  version: 0.23.0
- name: cfcr-etcd
  sha1: 728839a7ddd44757e31ef0fdbcd131c2be23ab0e
  url: https://github.com/cloudfoundry-incubator/cfcr-etcd-release/releases/download/v1.5.0/cfcr-etcd-release-1.5.0.tgz
  version: 1.5.0
- name: docker
  sha1: f192296243e68150ae66656fc9134a2b2a023184
  url: https://github.com/cloudfoundry-incubator/docker-boshrelease/releases/download/v32.0.0/docker-32.0.0.tgz
  version: 32.0.0
- name: bosh-dns
  sha1: d1aadbda5d60c44dec4a429cda872cf64f6d8d0b
  url: https://bosh.io/d/github.com/cloudfoundry/bosh-dns-release?v=1.10.0
  version: 1.10.0
- name: bpm
  sha1: 4b6ebfdaa467c04855528172b099e565d679e0f5
  url: https://bosh.io/d/github.com/cloudfoundry-incubator/bpm-release?v=0.13.0
  version: 0.13.0
stemcells:
- alias: default
  os: ubuntu-xenial
  version: ((bosh-stemcell-version))
update:
  canaries: 1
  canary_watch_time: 10000-300000
  max_in_flight: 1
  update_watch_time: 10000-300000
#variables:
#- name: kubo-admin-password
#  type: password
#- name: kubelet-password
#  type: password
#- name: kubelet-drain-password
#  type: password
#- name: kube-proxy-password
#  type: password
#- name: kube-controller-manager-password
#  type: password
#- name: kube-scheduler-password
#  type: password
#- name: kubo_ca
#  options:
#    common_name: ca
#    is_ca: true
#  type: certificate
#- name: tls-kubelet
#  options:
#    alternative_names: []
#    ca: kubo_ca
#    common_name: kubelet.cfcr.internal
#  type: certificate
#- name: tls-kubelet-client
#  options:
#    ca: kubo_ca
#    common_name: kube-apiserver.cfcr.internal
#    extended_key_usage:
#    - client_auth
#  type: certificate
#- name: tls-kubernetes
#  options:
#    alternative_names:
#    - ((kubo-ip-host)) #10.100.200.1
#    - kubernetes
#    - kubernetes.default
#    - kubernetes.default.svc
#    - kubernetes.default.svc.cluster.local
#    - master.cfcr.internal
#    ca: kubo_ca
#    common_name: master.cfcr.internal
#  type: certificate
#- name: service-account-key
#  type: rsa
#- name: tls-etcd-v0-17-0
#  options:
#    ca: kubo_ca
#    common_name: '*.etcd.cfcr.internal'
#    extended_key_usage:
#    - client_auth
#    - server_auth
#  type: certificate
#- name: tls-etcdctl
#  options:
#    ca: kubo_ca
#    common_name: etcdClient
#    extended_key_usage:
#    - client_auth
#  type: certificate
#- name: tls-metrics-server
#  options:
#    alternative_names:
#    - metrics-server.kube-system.svc
#    ca: kubo_ca
#    common_name: metrics-server
#  type: certificate
#- name: tls-heapster
#  options:
#    alternative_names:
#    - heapster.kube-system.svc.cluster.local
#    ca: kubo_ca
#    common_name: heapster
#  type: certificate
#- name: tls-influxdb
#  options:
#    alternative_names: []
#    ca: kubo_ca
#    common_name: monitoring-influxdb
#  type: certificate
#- name: kubernetes-dashboard-ca
#  options:
#    common_name: ca
#    is_ca: true
#  type: certificate
#- name: tls-kubernetes-dashboard
#  options:
#    alternative_names: []
#    ca: kubernetes-dashboard-ca
#    common_name: kubernetesdashboard.cfcr.internal
#  type: certificate
#- name: /dns_healthcheck_tls_ca
#  opsname: global_dns_healthcheck_tls_ca
#  options:
#    common_name: dns-healthcheck-tls-ca
#    is_ca: true
#  type: certificate
#- name: /dns_healthcheck_server_tls
#  opsname: global_dns_healthcheck_server_tls
#  options:
#    ca: /dns_healthcheck_tls_ca
#    common_name: health.bosh-dns
#    extended_key_usage:
#    - server_auth
#  type: certificate
#- name: /dns_healthcheck_client_tls
#  opsname: global_dns_healthcheck_client_tls
#  options:
#    ca: /dns_healthcheck_tls_ca
#    common_name: health.bosh-dns
#    extended_key_usage:
#    - client_auth
#  type: certificate
#- name: /dns_api_tls_ca
#  opsname: global_dns_api_tls_ca
#  options:
#    common_name: dns-api-tls-ca
#    is_ca: true
#  type: certificate
#- name: /dns_api_server_tls
#  opsname: global_dns_api_server_tls
#  options:
#    ca: /dns_api_tls_ca
#    common_name: api.bosh-dns
#    extended_key_usage:
#    - server_auth
#  type: certificate
#- name: /dns_api_client_tls
#  opsname: global_dns_api_client_tls
#  options:
#    ca: /dns_api_tls_ca
#    common_name: api.bosh-dns
#    extended_key_usage:
#    - client_auth
#  type: certificate
